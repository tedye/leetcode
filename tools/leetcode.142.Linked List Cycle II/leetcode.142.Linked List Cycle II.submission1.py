# Definition for singly-linked list.# class ListNode:#     def __init__(self, x):#         self.val = x#         self.next = Noneclass Solution:    # @param head, a ListNode    # @return a list node    def detectCycle(self, head):        if not head:            return None                length = 0        slow = fast = head        while fast and fast.next and fast.next.next:            fast = fast.next.next            slow = slow.next            if slow == fast:                x = head                while x != slow:                    slow = slow.next                    x = x.next                return x        return None        